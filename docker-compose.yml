services:
  api:
    build: .
    container_name: twitch-q-backend
    environment:
      - ADMIN_TOKEN=${ADMIN_TOKEN}
      - DB_URL=sqlite:////data/db.sqlite
      - RESET_DB="0"
      - API_PORT=${API_PORT:-7070}
    env_file:
      - stack.env
    ports:
      - "${API_PORT:-7070}:${API_PORT:-7070}"
    volumes:
      - ./data:/data
  bot:
    build:
      context: .
      dockerfile: bot/Dockerfile
    environment:
      BACKEND_BASE_URL: http://api:${API_PORT:-7070}
      BACKEND_ADMIN_TOKEN: ${ADMIN_TOKEN}
      TWITCH_BOT_TOKEN: ${TWITCH_OAUTH_TOKEN}
      BOT_NICK: ${BOT_NICK}
      CHANNELS: ${TWITCH_CHANNELS}         # comma-separated
      COMMANDS_FILE: /bot/commands.yml
      BOT_MESSAGES_PATH: /bot/messages.yml
    env_file:
      - stack.env
    depends_on:
      - api
    restart: unless-stopped

    volumes:
      - /bot/commands.yml:/bot/commands.yml:ro
      - /bot/messages.yml:/bot/messages.yml:ro
  web:
    build:
      context: .
      dockerfile: web/Dockerfile
    container_name: songqueue-web
    env_file:
      - stack.env
    ports:
      - "${WEB_PORT:-7000}:80"
    restart: unless-stopped
